{"version":3,"sources":["js/bg.js"],"names":["bg","API_UNSPLASH","body","document","querySelector","locationContainer","loadBackground","savedImage","localStorage","getItem","parsedImage","JSON","parse","now","Date","expiresOn","getBackground","style","backgroundImage","url","name","city","country","text","includes","innerText","fetch","then","response","ok","json","console","error","status","dir","urls","full","location","imageUrl","expirationTs","imageObject","SEC_REFRESH","setItem","stringify","saveBackground"],"mappings":";AAAA,IAAMA,EAAK,WACHC,IAIAC,EAAOC,SAASC,cAAc,QAClCC,EAAoBF,SAASC,cAAc,aAEvCE,EAAiB,WACfC,IAAAA,EAAaC,aAAaC,QAAQ,MACpC,GAACF,EAAD,CAKEG,IAAAA,EAAcC,KAAKC,MAAML,GACzBM,EAAMC,KAAKD,MACbH,GAAAA,EAAYK,UAAYF,EAC1BG,QADEN,CAKJR,EAAKe,MAAMC,gBAAoGR,kFAAAA,OAAAA,EAAYS,IAA3H,KAEQC,IAAAA,EAAwBV,EAAxBU,KAAMC,EAAkBX,EAAlBW,KAAMC,EAAYZ,EAAZY,QAChBC,EAAOH,EACNA,IAIDC,IAASE,EAAKC,SAASH,KACzBE,GAAaF,KAAAA,OAAAA,IAEXC,IAAYC,EAAKC,SAASF,KAC5BC,GAAaD,KAAAA,OAAAA,IAGfjB,EAAkBoB,UAAYF,SA1B5BP,KA0CEA,EAAgB,SAAhBA,IACJU,MApDA,6EAqDGC,KAAK,SAACC,GACD,OAACA,EAASC,GAKPD,EAASE,QAJdC,QAAQC,MAAeJ,SAAAA,OAAAA,EAASK,OAAhC,OACAL,EAASL,OAAOI,KAAKI,QAAQC,OACtB,QAIVL,KAAK,SAACG,GACD,GAACA,EAKD,GADJC,QAAQG,IAAIJ,GACPA,EAAKK,MAASL,EAAKK,KAAKC,MAASN,EAAKO,SAAvC,CAMMD,IAAAA,EAENN,EAFFK,KAAQC,KAENN,EAAAA,EADFO,UApCe,SAACC,EAAUjB,EAAMC,EAASF,GACzCmB,IACAC,EAAc,CAClBrB,IAAKmB,EACLvB,UAHmBD,KAAKD,MAAQ4B,KAIhCpB,KAAAA,EACAC,QAAAA,EACAF,KAAAA,GAEFZ,aAAakC,QAAQ,KAAM/B,KAAKgC,UAAUH,IAC1ClC,IA4BIsC,CAAeR,EAFDf,EAAAA,KAAMC,EAAAA,QAASF,EAAAA,WAN3BJ,OAaNV,KAIJN","file":"bg.f6c828bd.js","sourceRoot":"..","sourcesContent":["const bg = () => {\r\n  const API_UNSPLASH =\r\n    \"https://u23oq5hfki.execute-api.ap-northeast-2.amazonaws.com/photos/random\";\r\n  const SEC_REFRESH = 3600;\r\n\r\n  const body = document.querySelector(\"body\"),\r\n    locationContainer = document.querySelector(\".location\");\r\n\r\n  const loadBackground = () => {\r\n    const savedImage = localStorage.getItem(\"bg\");\r\n    if (!savedImage) {\r\n      getBackground();\r\n      return;\r\n    }\r\n\r\n    const parsedImage = JSON.parse(savedImage);\r\n    const now = Date.now();\r\n    if (parsedImage.expiresOn < now) {\r\n      getBackground();\r\n      return;\r\n    }\r\n\r\n    body.style.backgroundImage = `linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.5)), url(${parsedImage.url})`;\r\n\r\n    const { name, city, country } = parsedImage;\r\n    let text = name;\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    if (city && !text.includes(city)) {\r\n      text += `, ${city}`;\r\n    }\r\n    if (country && !text.includes(country)) {\r\n      text += `, ${country}`;\r\n    }\r\n\r\n    locationContainer.innerText = text;\r\n  };\r\n\r\n  const saveBackground = (imageUrl, city, country, name) => {\r\n    const expirationTs = Date.now() + SEC_REFRESH * 1000;\r\n    const imageObject = {\r\n      url: imageUrl,\r\n      expiresOn: expirationTs,\r\n      city,\r\n      country,\r\n      name\r\n    };\r\n    localStorage.setItem(\"bg\", JSON.stringify(imageObject));\r\n    loadBackground();\r\n  };\r\n\r\n  const getBackground = () => {\r\n    fetch(API_UNSPLASH)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          console.error(`Error ${response.status}\\n`);\r\n          response.text().then(console.error);\r\n          return null;\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((json) => {\r\n        if (!json) {\r\n          return;\r\n        }\r\n\r\n        console.dir(json);\r\n        if (!json.urls || !json.urls.full || !json.location) {\r\n          getBackground();\r\n          return;\r\n        }\r\n\r\n        const {\r\n          urls: { full },\r\n          location: { city, country, name }\r\n        } = json;\r\n        saveBackground(full, city, country, name);\r\n      });\r\n  };\r\n\r\n  const init = () => {\r\n    loadBackground();\r\n  };\r\n  init();\r\n};\r\nbg();\r\n"]}